

.ProseMirror .is-editor-empty:first-child {
  position: relative;
}
.ProseMirror .is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  position: absolute;
  left: 0;
  top: 0;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}
.ProseMirror .is-empty {
  position: relative;
}
.ProseMirror .is-empty::before {
  content: attr(data-placeholder);
  position: absolute;
  left: 0;
  top: 0;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

/* Custom image styles */

.ProseMirror img {
  transition: filter 0.1s ease-in-out;

  &:hover {
    cursor: pointer;
    filter: brightness(90%);
  }

  &.ProseMirror-selectednode {
    outline: 3px solid #5abbf7;
    filter: brightness(90%);
  }
}

.img-placeholder {
  position: relative;

  &:before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 3px solid var(--novel-stone-200);
    border-top-color: var(--novel-stone-800);
    animation: spinning 0.6s linear infinite;
  }
}

@keyframes spinning {
  to {
    transform: rotate(360deg);
  }
}

/* Task List - Unified with regular list styles */
ul[data-type="taskList"] {
  margin: 1rem 0;
  padding-left: 2rem;
  list-style: none;
}

ul[data-type="taskList"] li {
  margin: 0.5rem 0;
  line-height: 1.7;
  font-size: 1rem;
  position: relative;
  padding-left: 1.5rem;
}

/* Task list checkbox - positioned absolutely to align with regular list bullets */
ul[data-type="taskList"] li > label {
  position: absolute;
  left: 0;
  top: 0.4rem;
  user-select: none;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.25rem;
  height: 1.25rem;
}

ul[data-type="taskList"] li > label input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: transparent;
  margin: 0;
  cursor: pointer;
  width: 16px;
  height: 16px;
  border: 1.5px solid #D1D5DB;
  border-radius: 3px;
  display: grid;
  place-content: center;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

ul[data-type="taskList"] li > label input[type="checkbox"]:hover {
  border-color: #9CA3AF;
  background-color: #F9FAFB;
}

ul[data-type="taskList"] li > label input[type="checkbox"]:active {
  transform: scale(0.95);
}

ul[data-type="taskList"] li > label input[type="checkbox"]::before {
  content: "";
  width: 10px;
  height: 10px;
  transform: scale(0);
  transition: 120ms transform cubic-bezier(0.4, 0, 0.2, 1);
  background-color: #3B82F6;
  border-radius: 2px;
  transform-origin: center;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

ul[data-type="taskList"] li > label input[type="checkbox"]:checked {
  border-color: #3B82F6;
  background-color: #3B82F6;
}

ul[data-type="taskList"] li > label input[type="checkbox"]:checked::before {
  transform: scale(1);
  background-color: white;
}

/* Task list content styling */
ul[data-type="taskList"] li > div {
  display: inline;
}

ul[data-type="taskList"] li > div > p {
  margin: 0 !important;
  display: inline;
}

ul[data-type="taskList"] li[data-checked="true"] > div > p {
  color: #9CA3AF;
  text-decoration: line-through;
  text-decoration-thickness: 1px;
  text-decoration-color: #D1D5DB;
}



/* Novel-style code blocks - 优化为平板舒适的代码阅读体验 */
pre {
  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  border: 1px solid #e2e8f0;
  border-radius: 12px;
  padding: 1.5rem;
  margin: 1.5rem 0;
  overflow-x: auto;
  font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
  font-size: 0.9375rem; /* 15px - 平板代码最佳大小 */
  line-height: 1.7;
  position: relative;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03);
  transition: all 0.3s ease;
}

pre:hover {
  box-shadow: 0 8px 12px -2px rgba(0, 0, 0, 0.08), 0 4px 8px -2px rgba(0, 0, 0, 0.04);
  transform: translateY(-1px);
}

pre code {
  background: none !important;
  border: none !important;
  padding: 0 !important;
  color: #1e293b; /* 深色字体，提高可读性 */
  font-family: inherit;
  font-weight: 600; /* 增加字体粗细 */
}

/* Inline code styling - 优化为平板舒适的内联代码阅读 */
:not(pre) > code {
  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
  color: #0c4a6e;
  padding: 0.25rem 0.5rem;
  border-radius: 6px;
  font-size: 0.9375em; /* 15px - 与代码块保持一致 */
  font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
  border: 1px solid #bae6fd;
  font-weight: 600;
  box-shadow: 0 1px 2px 0 rgba(2, 132, 199, 0.1);
  transition: all 0.2s ease;
}

:not(pre) > code:hover {
  background: linear-gradient(135deg, #e0f2fe 0%, #bae6fd 100%);
  box-shadow: 0 2px 4px 0 rgba(2, 132, 199, 0.15);
  transform: translateY(-1px);
}



/* Overwrite tippy-box original max-width */
.tippy-box {
  max-width: 400px !important;
}

.ProseMirror:not(.dragging) .ProseMirror-selectednode {
  outline: none !important;
  background-color: var(--novel-highlight-blue);
  transition: background-color 0.2s;
  box-shadow: none;
}

/* Novel.sh inspired drag handle styles - Modern, minimalist design based on Tiptap official documentation */



.drag-handle {
  position: absolute;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out, transform 0.2s ease-in-out, background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
  border-radius: 6px;
  
  /* Modern grip icon - cleaner design */
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' fill='none'%3E%3Ccircle cx='4' cy='4' r='1' fill='%236B7280'/%3E%3Ccircle cx='4' cy='8' r='1' fill='%236B7280'/%3E%3Ccircle cx='4' cy='12' r='1' fill='%236B7280'/%3E%3Ccircle cx='12' cy='4' r='1' fill='%236B7280'/%3E%3Ccircle cx='12' cy='8' r='1' fill='%236B7280'/%3E%3Ccircle cx='12' cy='12' r='1' fill='%236B7280'/%3E%3C/svg%3E");
  background-size: 16px 16px;
  background-repeat: no-repeat;
  background-position: center;
  width: 24px;
  height: 24px;
  z-index: 50;
  cursor: grab;
  
  /* Position with better spacing - further from content */
  left: -36px !important;
  top: 50% !important;
  transform: translateY(-50%);
  
  /* Modern subtle background - only visible on hover */
  background-color: transparent;
  border: 1px solid transparent;
  
  /* Smooth shadow for depth */
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  
  /* Scale animation for modern feel */
  transform: translateY(-50%) scale(0.95);
  
  /* Add delay to prevent accidental hiding */
  transition-delay: 0s, 0s, 0s, 0s, 0s;
  
  &:hover {
    opacity: 1 !important;
    background-color: #F3F4F6;
    border-color: #E5E7EB;
    transform: translateY(-50%) scale(1);
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
    /* Remove delay on hover for immediate response */
    transition-delay: 0s;
  }

  &:active {
    background-color: #E5E7EB;
    border-color: #D1D5DB;
    transform: translateY(-50%) scale(0.98);
    cursor: grabbing;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  &.hide {
    opacity: 0;
    pointer-events: none;
  }

  @media screen and (max-width: 768px) {
    display: none;
    pointer-events: none;
  }
}

/* Create a stable hover area that doesn't disappear when moving to drag handle */
.ProseMirror > * {
  position: relative;
}

/* Show drag handle when hovering over the entire block element */
.ProseMirror > *:hover .drag-handle {
  opacity: 0.6;
  visibility: visible;
  pointer-events: auto;
  transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1), visibility 0.2s cubic-bezier(0.4, 0, 0.2, 1), transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transform: translateY(-50%) scale(1);
}

/* Keep drag handle visible when hovering over it directly */
.ProseMirror > * .drag-handle:hover {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}

/* Ensure drag handle stays visible during the transition from block to handle */
.ProseMirror > * .drag-handle {
  pointer-events: auto;
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
}

/* Create extended hover area to prevent flickering */
.ProseMirror > *::before {
  content: '';
  position: absolute;
  left: -50px;
  top: 0;
  width: 50px;
  height: 100%;
  z-index: 10;
  pointer-events: auto;
}

/* Show drag handle when hovering over the extended area */
.ProseMirror > *:hover::before {
  pointer-events: auto;
}

.ProseMirror > *:hover::before + .drag-handle,
.ProseMirror > *:hover .drag-handle {
  opacity: 0.6;
  visibility: visible;
}

/* Drag handle states based on Tiptap documentation */
.drag-handle.dragging {
  opacity: 1 !important;
  background-color: #3B82F6 !important;
  border-color: #2563EB !important;
  cursor: grabbing !important;
  transform: translateY(-50%) scale(1.05) !important;
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3) !important;
}

.drag-handle.locked {
  opacity: 1 !important;
  background-color: #F59E0B !important;
  border-color: #D97706 !important;
}

/* Highlight node when drag handle is active */
.ProseMirror > *.drag-handle-active {
  background-color: rgba(59, 130, 246, 0.05);
  border-radius: 4px;
  transition: background-color 0.2s ease;
}

/* Custom drag handle for different node types */
.drag-handle[data-node-type="heading"] {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' fill='none'%3E%3Cpath d='M3 4h10M3 8h10M3 12h6' stroke='%236B7280' stroke-width='1.5' stroke-linecap='round'/%3E%3C/svg%3E");
}

.drag-handle[data-node-type="list"] {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' fill='none'%3E%3Ccircle cx='4' cy='4' r='1' fill='%236B7280'/%3E%3Ccircle cx='4' cy='8' r='1' fill='%236B7280'/%3E%3Ccircle cx='4' cy='12' r='1' fill='%236B7280'/%3E%3Cline x1='7' y1='4' x2='13' y2='4' stroke='%236B7280' stroke-width='1.5'/%3E%3Cline x1='7' y1='8' x2='13' y2='8' stroke='%236B7280' stroke-width='1.5'/%3E%3Cline x1='7' y1='12' x2='13' y2='12' stroke='%236B7280' stroke-width='1.5'/%3E%3C/svg%3E");
}

.drag-handle[data-node-type="blockquote"] {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' fill='none'%3E%3Cpath d='M4 3h8M4 7h8M4 11h4' stroke='%236B7280' stroke-width='1.5' stroke-linecap='round'/%3E%3C/svg%3E");
}



/* 表格样式 */
.ProseMirror table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  overflow: hidden;
  margin: 1rem 0;
  border: 1px solid hsl(var(--border));
}

.ProseMirror td,
.ProseMirror th {
  min-width: 1em;
  border: 1px solid hsl(var(--border));
  padding: 8px 12px;
  vertical-align: top;
  box-sizing: border-box;
  position: relative;
  background-color: hsl(var(--background));
}

.ProseMirror th {
  font-weight: bold;
  text-align: left;
  background-color: hsl(var(--muted));
}

.ProseMirror .selectedCell:after {
  z-index: 2;
  position: absolute;
  content: "";
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: rgba(200, 200, 255, 0.4);
  pointer-events: none;
}

.ProseMirror .column-resize-handle {
  position: absolute;
  right: -2px;
  top: 0;
  bottom: -2px;
  width: 4px;
  background-color: #adf;
  pointer-events: none;
}

.ProseMirror table .selectedCell {
  background-color: hsl(var(--accent) / 0.1);
}

.ProseMirror .tableWrapper {
  padding: 1rem 0;
  overflow-x: auto;
}

.ProseMirror .resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

/* 表格工具栏样式 */
.table-toolbar {
  position: absolute;
  z-index: 1000;
  background: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  border-radius: 6px;
  padding: 4px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  display: flex;
  gap: 2px;
}

.table-toolbar button {
  padding: 6px 8px;
  border: none;
  background: transparent;
  border-radius: 4px;
  cursor: pointer;
  font-size: 12px;
  color: hsl(var(--foreground));
  transition: background-color 0.2s;
}

.table-toolbar button:hover {
  background-color: hsl(var(--accent));
}

.table-toolbar button:active {
  background-color: hsl(var(--accent) / 0.8);
}

.table-toolbar button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}






pre {
  opacity: 0.8 !important; /* 提高可见度 */
  border-radius: 0.75rem;
  color: #e2e8f0;
  font-family: "JetBrainsMono", monospace;
  padding: 1rem 1.25rem;
  background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%) !important;
  border: 1px solid #334155;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);

  code {
    background: none;
    color: inherit;
    font-size: 0.85rem;
    padding: 0;
    line-height: 1.6;
  }
  .hljs-quote {
    color: #94a3b8;
    font-style: italic;
  }

  .hljs-variable,
  .hljs-template-variable,
  .hljs-attribute,
  .hljs-tag,
  .hljs-name,
  .hljs-regexp,
  .hljs-link,
  .hljs-name,
  .hljs-selector-id,
  .hljs-selector-class {
    color: #f87171;
    font-weight: 500;
  }

  .hljs-keyword,
  .hljs-selector-tag {
    color: #38bdf8;
    font-weight: 600;
  }

  .hljs-emphasis {
    font-style: italic;
    color: #cbd5e1;
  }

  .hljs-strong {
    font-weight: 700;
    color: #f1f5f9;
  }
}





body {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

/* 幻灯片字体样式 */
.reveal h1, .reveal h2, .reveal h3, .reveal h4, .reveal h5, .reveal h6 {
  font-family: '优设标题黑', 'Noto Sans SC', 'Microsoft YaHei', sans-serif;
  font-weight: bold;
}

.reveal p, .reveal li, .reveal td, .reveal th {
  font-family: 'AlibabaPuHuiTi', 'Noto Sans SC', 'Microsoft YaHei', sans-serif;
}

/* 不同风格的字体类 */
.reveal-creative h1, .reveal-creative h2, .reveal-creative h3 {
  font-family: '锐字真言体', 'Noto Sans SC', sans-serif;
}

.reveal-fun h1, .reveal-fun h2, .reveal-fun h3 {
  font-family: '站酷快乐体', 'Noto Sans SC', sans-serif;
}

/* 文本截断样式 */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* 拖拽时的样式 */
.dragging {
  transform: rotate(5deg);
  z-index: 1000;
}

/* ProseMirror base container */
.ProseMirror {
  /* Ensure proper positioning context for drag handles */
  position: relative;
  padding-left: 3rem !important;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  outline: none;
}

/* Ensure all ProseMirror nodes have relative positioning for drag handles */
.ProseMirror > * {
  position: relative;
  min-height: 1.5em;
}

/* Force drag handles to be visible when hovering over any node */
.ProseMirror > *:hover::before {
  content: '';
  position: absolute;
  left: -2rem;
  top: 50%;
  transform: translateY(-50%);
  width: 1.2rem;
  height: 1.5rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(0, 0, 0, 0.3)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.6;
  transition: opacity 0.2s ease-in-out;
  cursor: grab;
  z-index: 10;
}

.ProseMirror > *:hover::before:hover {
  opacity: 1;
}

/* ProseMirror Heading 样式 - 优化为平板常用字体大小 */
.ProseMirror h1 {
  font-size: 2.25rem; /* 36px - 平板常用大标题 */
  font-weight: 700;
  line-height: 1.2;
  margin: 1.5rem 0 1rem 0;
  color: hsl(var(--foreground));
}

.ProseMirror h2 {
  font-size: 1.875rem; /* 30px */
  font-weight: 600;
  line-height: 1.3;
  margin: 1.25rem 0 0.75rem 0;
  color: hsl(var(--foreground));
}

.ProseMirror h3 {
  font-size: 1.5rem; /* 24px */
  font-weight: 600;
  line-height: 1.4;
  margin: 1rem 0 0.5rem 0;
  color: hsl(var(--foreground));
}

.ProseMirror h4 {
  font-size: 1.25rem; /* 20px */
  font-weight: 600;
  line-height: 1.4;
  margin: 0.75rem 0 0.5rem 0;
  color: hsl(var(--foreground));
}

.ProseMirror h5 {
  font-size: 1.125rem; /* 18px */
  font-weight: 600;
  line-height: 1.5;
  margin: 0.5rem 0 0.25rem 0;
  color: hsl(var(--foreground));
}

.ProseMirror h6 {
  font-size: 1rem; /* 16px */
  font-weight: 600;
  line-height: 1.5;
  margin: 0.5rem 0 0.25rem 0;
  color: hsl(var(--muted-foreground));
}

/* 段落样式 - 优化为平板舒适的阅读体验 */
.ProseMirror p {
  margin: 1rem 0;
  line-height: 1.7;
  color: hsl(var(--foreground));
  font-size: 1rem; /* 16px - 平板最佳阅读大小 */
}

/* 列表样式 - 优化为平板舒适的阅读体验 */
.ProseMirror ul,
.ProseMirror ol {
  margin: 1rem 0;
  padding-left: 2rem; /* 增大缩进，提升可读性 */
}

.ProseMirror ul {
  list-style-type: disc;
}

.ProseMirror ol {
  list-style-type: decimal;
}

.ProseMirror li {
  margin: 0.5rem 0;
  line-height: 1.7;
  font-size: 1rem; /* 16px - 与段落保持一致 */
}

.ProseMirror li > p {
  margin: 0;
}

/* 引用块样式 */
.ProseMirror blockquote {
  border-left: 4px solid hsl(var(--border));
  margin: 1rem 0;
  padding: 0.5rem 0 0.5rem 1rem;
  background-color: hsl(var(--muted) / 0.1);
  font-style: italic;
  color: hsl(var(--muted-foreground));
}

.ProseMirror blockquote > p {
  margin: 0;
}

/* 代码块样式 - 优化为平板舒适的代码阅读体验 */
.ProseMirror code {
  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
  color: #0c4a6e;
  padding: 0.25rem 0.5rem;
  border-radius: 6px;
  font-family: 'JetBrainsMono', monospace;
  font-size: 0.9375rem; /* 15px - 平板代码最佳大小 */
  border: 1px solid #bae6fd;
  font-weight: 600;
  box-shadow: 0 1px 2px 0 rgba(2, 132, 199, 0.1);
  transition: all 0.2s ease;
}

.ProseMirror code:hover {
  background: linear-gradient(135deg, #e0f2fe 0%, #bae6fd 100%);
  box-shadow: 0 2px 4px 0 rgba(2, 132, 199, 0.15);
  transform: translateY(-1px);
}

.ProseMirror pre {
  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  border: 1px solid #e2e8f0;
  border-radius: 12px;
  color: #e2e8f0;
  font-family: 'JetBrainsMono', monospace;
  padding: 1.5rem;
  margin: 1.5rem 0;
  overflow-x: auto;
  line-height: 1.7;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03);
  transition: all 0.3s ease;
}

.ProseMirror pre:hover {
  box-shadow: 0 8px 12px -2px rgba(0, 0, 0, 0.08), 0 4px 8px -2px rgba(0, 0, 0, 0.04);
  transform: translateY(-1px);
}

.ProseMirror pre code {
  background: none;
  padding: 0;
  border-radius: 0;
  color: #e2e8f0; /* 修复：确保代码字体为深色 */
  font-weight: 600; /* 增加字体粗细提高可读性 */
}

/* 链接样式 */
.ProseMirror a {
  color: hsl(var(--primary));
  text-decoration: underline;
  text-underline-offset: 2px;
}

.ProseMirror a:hover {
  color: hsl(var(--primary) / 0.8);
}

/* 强调样式 */
.ProseMirror strong {
  font-weight: 700;
  color: hsl(var(--foreground));
}

.ProseMirror em {
  font-style: italic;
  color: hsl(var(--foreground));
}

/* 水平分割线 */
.ProseMirror hr {
  border: none;
  border-top: 2px solid hsl(var(--border));
  margin: 2rem 0;
}

/* 图片样式增强 */
.ProseMirror img {
  max-width: 100%;
  height: auto;
  border-radius: 0.5rem;
  margin: 1rem 0;
}

/* 内联样式优化 */
.ProseMirror mark {
  background-color: hsl(var(--primary) / 0.2);
  padding: 0.125rem 0.25rem;
  border-radius: 0.125rem;
}

.ProseMirror del {
  text-decoration: line-through;
  color: hsl(var(--muted-foreground));
}

.ProseMirror ins {
  text-decoration: underline;
  background-color: hsl(var(--primary) / 0.1);
}

/* 脚本卡片动画 */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.script-card {
  animation: slideIn 0.3s ease-out;
}
